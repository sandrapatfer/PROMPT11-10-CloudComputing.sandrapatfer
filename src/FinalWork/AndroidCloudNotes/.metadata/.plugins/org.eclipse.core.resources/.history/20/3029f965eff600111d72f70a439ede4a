package prompt.cloudnotes;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

import prompt.cloudnotes.activities.AuthActivity;
import prompt.cloudnotes.activities.TaskListsActivity;
import prompt.cloudnotes.model.TaskList;
import prompt.cloudnotes.providers.NoteProviderContract;
import prompt.cloudnotes.providers.TaskListProviderContract;
import prompt.cloudnotes.services.GetInfoService;
import prompt.cloudnotes.stores.TaskListStore;
import android.app.Application;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.util.Log;

public class CloudNotesApp extends Application
{
	public static final String TAG = "CLOUD_NOTES";

	public static final String CODE_TAG = "code";
	public static final String CLIENT_ID = "androidcloudnotes";
	public static final String CLIENT_SECRET = "prompt";
	
//	public static final String WEB_APP_URL = "http://10.0.2.2:53484";
	public static final String WEB_APP_URL = "http://ana.cloudapp.net";
//	public static final String WEB_APP_URL = "http://promptcloudnotes.cloudapp.net";
	
	public static final String WEB_APP_NAME = "androidcloudnotes";
	public static final String WEB_APP_CLIENT_ID = "oIHgrHLvCk6HDs4mMswn7g";
	public static final String WEB_APP_REDIRECT_URI = "http://aproval.com";
	public static final String WEB_APP_CLIENT_SECRET = "2IfmC5pFGESBC7f8L3bW_Q";
	
	public static final String PREFS_NAME = "CloudAppInternalPrefs";
	public static final String PREFS_TOKEN = "token";
	public static final String PREFS_REFRESH_TOKEN = "refresh-token";
	
	public String Token;
	public String RefreshToken;
	
	public TaskListStore Store;

	@Override
	public void onCreate() {
		Log.d(TAG, "CloudNotesApp.onCreate");
		super.onCreate();
		Init();
	}

	
	
/*	void test {
        app.Store.fillTestValue();
		app.getContentResolver().notifyChange(Uri.parse(TaskListProviderContract.URI), null);
		app.getContentResolver().notifyChange(Uri.parse(NoteProviderContract.URI), null);

	}*/

	public void ProcessOAuthCode(String code) {

		HttpClient client = new DefaultHttpClient();
		HttpPost postRequest = new HttpPost(CloudNotesApp.WEB_APP_URL + "/OAuth2/Token");
		postRequest.addHeader("accept", "aplication/json");

		List<NameValuePair> formData = new ArrayList<NameValuePair>();
		formData.add(new BasicNameValuePair("code", code));
		formData.add(new BasicNameValuePair("redirect_uri", ""));
		formData.add(new BasicNameValuePair("grant_type", "authorization_code"));
		formData.add(new BasicNameValuePair("client_id", CloudNotesApp.CLIENT_ID));
		formData.add(new BasicNameValuePair("client_secret", CloudNotesApp.CLIENT_SECRET));
		
		try {
			postRequest.setEntity(new UrlEncodedFormEntity(formData));
			HttpResponse response = client.execute(postRequest);
			
			String output = Utils.ConvertStreamToString(response.getEntity().getContent());
			//Log.d(CloudNotesApp.TAG, "Output from Server: " + output);
			
			// TODO authenticate the application as a user in the server
			// at the moment the token request is not authenticated 
			
			JSONObject jsonResponse = new JSONObject(output);
			String token = jsonResponse.getString("access_token");
			String refreshToken = jsonResponse.getString("refresh_token");
			SaveToken(token, refreshToken);
			
			LaunchRefreshService();
			
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (JSONException e) {
			e.printStackTrace();
		}
	}
	
	public void SaveToken(String token, String refreshToken) {
		Log.d(CloudNotesApp.TAG, "Token: " + token);
		Token = token;
		RefreshToken = refreshToken;

		SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);
		SharedPreferences.Editor editor = settings.edit();
		editor.putString(PREFS_TOKEN, Token);
		editor.putString(PREFS_REFRESH_TOKEN, RefreshToken);
		editor.commit();
	}
	
	public void LaunchRefreshService(){
		Log.d(CloudNotesApp.TAG, "Starting refresh service");
		Intent msg = new Intent();
		msg.setClass(this, GetInfoService.class);
		startService(msg);		
	}
	
	private void Init() {
		
		Store = new TaskListStore();
	
		SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);
		Token = settings.getString(PREFS_TOKEN, "");
		RefreshToken = null;
	}
	
}
